//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Datos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class GemaEntities1 : DbContext
    {
        public GemaEntities1()
            : base("name=GemaEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<general_Articulo_Modificador_Dtl> general_Articulo_Modificador_Dtl { get; set; }
        public virtual DbSet<empleados_login_dtl> empleados_login_dtl { get; set; }
        public virtual DbSet<general_Articulos> general_Articulos { get; set; }
        public virtual DbSet<empleados_tokens> empleados_tokens { get; set; }
        public virtual DbSet<general_Modificadores> general_Modificadores { get; set; }
    
        public virtual int RegistraToken(string token, Nullable<System.DateTime> fechafin)
        {
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            var fechafinParameter = fechafin.HasValue ?
                new ObjectParameter("fechafin", fechafin) :
                new ObjectParameter("fechafin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistraToken", tokenParameter, fechafinParameter);
        }
    
        public virtual int ActualizaEstadoToken(Nullable<System.DateTime> nuevafecha, string token)
        {
            var nuevafechaParameter = nuevafecha.HasValue ?
                new ObjectParameter("nuevafecha", nuevafecha) :
                new ObjectParameter("nuevafecha", typeof(System.DateTime));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizaEstadoToken", nuevafechaParameter, tokenParameter);
        }
    
        [DbFunction("GemaEntities1", "ModificadoresdelArticulo")]
        public virtual IQueryable<ModificadoresdelArticulo_Result> ModificadoresdelArticulo(Nullable<int> iD_item)
        {
            var iD_itemParameter = iD_item.HasValue ?
                new ObjectParameter("ID_item", iD_item) :
                new ObjectParameter("ID_item", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ModificadoresdelArticulo_Result>("[GemaEntities1].[ModificadoresdelArticulo](@ID_item)", iD_itemParameter);
        }
    
        public virtual int guardaritem(Nullable<int> iD, string nombre, string display, Nullable<decimal> precio, Nullable<int> impuestos, Nullable<int> categoria, Nullable<bool> precio_Modificable, Nullable<bool> tiene_Modificadores)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var displayParameter = display != null ?
                new ObjectParameter("Display", display) :
                new ObjectParameter("Display", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            var impuestosParameter = impuestos.HasValue ?
                new ObjectParameter("Impuestos", impuestos) :
                new ObjectParameter("Impuestos", typeof(int));
    
            var categoriaParameter = categoria.HasValue ?
                new ObjectParameter("Categoria", categoria) :
                new ObjectParameter("Categoria", typeof(int));
    
            var precio_ModificableParameter = precio_Modificable.HasValue ?
                new ObjectParameter("Precio_Modificable", precio_Modificable) :
                new ObjectParameter("Precio_Modificable", typeof(bool));
    
            var tiene_ModificadoresParameter = tiene_Modificadores.HasValue ?
                new ObjectParameter("Tiene_Modificadores", tiene_Modificadores) :
                new ObjectParameter("Tiene_Modificadores", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("guardaritem", iDParameter, nombreParameter, displayParameter, precioParameter, impuestosParameter, categoriaParameter, precio_ModificableParameter, tiene_ModificadoresParameter);
        }
    
        public virtual int Borraitem(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Borraitem", iDParameter);
        }
    
        public virtual int GuardaModsOfItem(Nullable<int> iD_Mod, Nullable<int> iD_Item)
        {
            var iD_ModParameter = iD_Mod.HasValue ?
                new ObjectParameter("ID_Mod", iD_Mod) :
                new ObjectParameter("ID_Mod", typeof(int));
    
            var iD_ItemParameter = iD_Item.HasValue ?
                new ObjectParameter("ID_Item", iD_Item) :
                new ObjectParameter("ID_Item", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuardaModsOfItem", iD_ModParameter, iD_ItemParameter);
        }
    }
}
